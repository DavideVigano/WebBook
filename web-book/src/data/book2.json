{
    "title": "Malware",
    "preview": "Libro sul corso di Sicurezza I, verranno trattati argomenti relativi ai Malware",
    "copertina": "https://www.pandasecurity.com/it/mediacenter/src/uploads/2021/01/pandasecurity-4-tipi-malware-1100x825.jpg",
    "tag": [
        "Istruzione",
        "Sicurezza",
        "Malware",
        "Informatica"
    ],
    "capitoli": [
        {
            "title": "Capitolo 6 - Malware:",
            "sections": [
                {
                    "subtitle": "6.1 Tipologie di software maligno - Malware:",
                    "content": "<p>Rientrano nella categoria malware tantissimi software piu' o meno malevoli, purtroppo la definizione stessa della parola non permette una classificazione unanime. Alcuni esempi sono:</p>\n<ul>\n<li><em><strong>Advanced Persistent Threat - APT</strong></em>, Nuovo tipo di malware diretto a business e target politici che utilizzano varie tecniche di intrusione e malware, applicati persistentemente ed efficacemente a target specifici per un lungo periodo di tempo.</li>\n<li><em><strong>Adware</strong></em>, Annunci integrati con il software (eg: pop-up ads, browser redirection, ...)</li>\n<li><em>Attack-Kit</em>, Tool automatici per generare nuovi malware usando una varieta' di metodi di propagazione e di payload</li>\n<li><em>BackDoor/TrapDoor</em>, qualsiasi meccanismo per bypassare i normali controlli di sicurezza, permette ad utenti non autorizzati di accedere a funzionalita' di software o sistemi operativi</li>\n<li><em>Exploits</em>, Codice specifico per una singola vulnerabilita' o un set di esse</li>\n<li><em><strong>DoS</strong> client</em></li>\n<li><em><strong>Logic</strong> <strong>Bomb</strong></em>, Malware che scatta al compimento di una condizione logica (eg: happy birthday qualcosa)</li>\n<li><em>Rootkit</em>, Insieme di tool usati dopo essere entrati nel sistema ed aver ottenuto privilegi di root</li>\n<li><em>Spammer program</em></li>\n<li><em><strong>SpyWare</strong></em>, Software che colleziona infos dal computer e le trasmette ad un altro sistema (eg: monitorare battitura, dati a schermo, traffico di rete, scansione file, ...)</li>\n<li><em><strong>Trojan</strong></em>, Software che sembra avere funzioni utili, ma che nasconde una funzione potenzialmente malevola che evita i meccanismi di sicurezza.</li>\n<li><em><strong>Virus</strong></em>, <strong>Malware</strong> che quando eseguito prova a replicarsi all'interno di altri eseguibili o script, quando ha successo si ha l'infezione e una volta effettuata viene eseguito.</li>\n<li><em><strong>Worm</strong></em>, <strong>Software</strong> che viene eseguito da solo e si propaga in una versione funzionante in altri host della rete sfruttando vulnerabilita' software, di rete o catturando credenziali</li>\n<li><em>Zombie &amp; Bot</em>, programma installato su di una  macchina infetta che si attiva per lanciare attacchi alle altre macchine.</li>\n</ul>"
                },
                {
                    "subtitle": "6.3) Propagazione - Contenuti Infetti - Virus:",
                    "content": "<p>La prima categoria di propagazione malware riguarda frammenti di software parassiti che si attaccano a qualche eseguibile pre esistente. I frammenti possono essere codice macchina che infettano App, Utility, Programmi di sistema e addirittura Boot Sector.</p>\n<h4>Natura dei virus:</h4>\n<p>Un virus altro non e' che un pezzo di codice che infetta altri software o eseguibili, modificandoli. Queste modifiche riguardano iniezione di codice o cambio di contenuto.</p>\n<p>I primi virus apparirono nei primi anni 80 ed il termine viene attributo a Fred Cohen, autore del primo libro sulla materia. <strong>The Brain Virus</strong> fu uno dei primi a colpire MSDOS infettandolo pesantemente.</p>\n<p>Come virus biologici sono piccoli bastardi che possono buttar giu' qualcosa di enormemente piu' grosso di loro. La loro capacita' di restare dormienti ne permette la diffusione in totale anonimita'.</p>\n<p>Una delle ragione per cui i primi virus ebbero' un gran successo fu la mancanza di buon senso, che portava i programmatori a dare accessi sovradimensionati, per compiti che non li richiedevano e dato che un virus puo' eseguire quello che un software puo' eseguire...</p>\n<p>I malware moderni includono una o piu' di queste componenti:</p>\n<table>\n<thead>\n<tr>\n<th><strong>Meccanismo di Infezione</strong>, anche detto Infection Vector</th>\n<th>Trigger, anche conosciuta come Logic Bomb</th>\n<th>Payload</th>\n</tr>\n</thead>\n</table>\n<p>Durante il loro ciclo di vita hanno, di norma, 4 fasi:</p>\n<table>\n<thead>\n<tr>\n<th>Fase Dormiente</th>\n<th>Fase di Propagazione</th>\n<th>Fase di attivazione</th>\n<th>Fase di esecuzione</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>stato idle, non sempre presente</td>\n<td>si piazza dove puo'</td>\n<td>vede se puo' attivarsi, non sempre presente</td>\n<td>parte</td>\n</tr>\n</tbody>\n</table>\n<h3>Macro Virus:</h3>\n<p>Ovvero i virus che si appiccicano a documenti e usano le loro capacita' di macro per eseguirsi e propagarsi. Pericolosi poiche':</p>\n<table>\n<thead>\n<tr>\n<th>Platform Indipendent</th>\n<th>Infettano documenti, quindi dove sono le maggiori informazioni</th>\n<th>Facilmente propagabili, poiche' vengono passati tra utenti</th>\n<th>Pochi controlli del file system</th>\n<th>Di &quot;facile&quot; scrittura e modifica</th>\n</tr>\n</thead>\n</table>\n<h3>Classificazione Virus:</h3>\n<p>By Target:</p>\n<ul>\n<li><strong>Infezione del Boot Sector</strong>, hanno a disposizione 512bytes e si propaga ed attiva ad ogni avvio</li>\n<li><strong>Infezione File</strong>, infettano file che il SO o la Shell considerano eseguibili</li>\n<li><strong>Macro Virus</strong>, infettano file con macro o scripting interpretati da applicazioni</li>\n<li><strong>Virus multipartito</strong>, infettano file in piu' modalita', tipicamente piu' file</li>\n</ul>\n<p>By Concealment Strategy [Strategia di occultamento]:</p>\n<ul>\n<li><strong>Virus Criptato</strong>, utilizza la crittografia per oscurare i suoi contenuti, ma la parte di criptazione e decriptazione rimane in chiaro e la chiave viene immagazzinata col virus. La chiave viene cambiata ad ogni infezione, pertanto non si ha un pattern da quel punto di vista, ma <em>criptazione e decriptazione</em> sono facilmente individuabili da un antivirus. SI SGAMA LA DE/CRIPTAZIONE</li>\n<li><strong>Virus Stealth</strong>, pensato per nascondersi dagli anti-virus, pertanto viene interamente nascosto, puo' utilizzare mutazione di codice, compressione o tecniche rootkit.</li>\n<li><strong>Virus Polimorfico</strong>, crea copie durante la replicazione che hanno le stesse funzioni, ma pattern leggermente diversi. La SIGNATURE non puo' essere utilizzata per scovarli. Potrebbero avere istruzioni volutamente superflue o intercambiabili. Anche la criptazione e la generazione di chiavi per crittografare viene alterato ad ogni uso (<em>mutation engine</em>).<br>\nBASTA ESEGUIRE IN UNA VM E SCOPRIRE COMPORTAMENTI ANOMALI</li>\n<li><strong>Virus Metamorfico</strong>, come un polimorfico muta ad ogni infezione, ma lui si riscrive completamente ad ogni iterazione, utilizzando piu' tecniche di trasformazione rendendone difficile l'identificazione. DIFFICILISSIMI ANCHE DA SCRIVERE, MA INTROVABILI, IN VM ALTERANO LE ISTRUZIONI PER RENDERSI INNOCUI</li>\n</ul>"
                },
                {
                    "subtitle": "6.4 Propagazione - Exploit di vulnerabilita' - Worms:",
                    "content": "<blockquote>\n<p><em>Worms</em>: programma che cerca attivamente piu' macchine da infettare e che si esegue automaticamente</p>\n</blockquote>\n<p>Meccanismi di replicazione che sfuttano accessi remoti a sistemi:</p>\n<ul>\n<li><strong>E-Mail o messaggi istantanei</strong>, si manda ad altri sistemi come allegato cosi' che il codice stia nella mail o nell'allegato.</li>\n<li><strong>File Sharing</strong>, USB o media rimuovibili e viene eseguito quando il drive viene connesso utilizzando i meccanismi di autorun per approfittarsi di una vulnerabilita'</li>\n<li><strong>Esecuzione Remota</strong>, grazie a expoit di facility di esecuzione remota o programmi in rete</li>\n<li><strong>Remote FIle access o capacita' di Trasferimento</strong>, sfrutta ccessi a file remoti o servizi di trasmissione per copiarsi tra sistemi dove potrebbe essere eseguito</li>\n<li><strong>Remote Login</strong>, un worm si logga in un sistema remote come utente e poi usa i comandi per copiarsi in altri sistemi (dove puo' essere eseguito)</li>\n</ul>\n<p>La nuova copia viene poi eseguita sul sistema remoto dove continua anche a propagarsi. Anche lui ha le soliti fasi di un virus e la fase di propagazione ha queste due funzioni:</p>\n<table>\n<thead>\n<tr>\n<th>Cercare meccanismi di accesso su altri sistemi da infettare esaminando tabelle di hosting, buddy list, trusted peers, ... oppure cercando supporti removibili adeguati</th>\n<th>Usando mecanismi di accessi per trasferire copie a sistemi remoti per poi eseguirsi</th>\n</tr>\n</thead>\n</table>\n<p>Inoltre prova a capire se un sistema e' gia' stato infettato prima di copiarsi. Potrebbe inoltre iniettarsi in processi esistenti.</p>\n<h3>Target Discovery:</h3>\n<p>Un processo conosciuto come scanning, dove identifica potenziali sistemi con certi servizi vulnerabili. Le strategie di scanning possibili sono:</p>\n<ul>\n<li><strong>Random</strong>, ogni host da' random IP usando seed differenti, producendo tanto traffico Internet che potrebbe causarne la distruzione anche prima di lanciare l'attacco. BAD</li>\n<li><strong>Hit-List</strong>, l'attaccante compila una lista di vulnerabilita' potenziali, processo lungo ma permette di essere meno individuabili. Ogni macchina infettata ha una porzione della lista per continuare l'infezione (distribuito). SEEMS GOOD</li>\n<li><strong>Topological</strong>, utilizza informazioni contenute in una macchina infetta per trovare altri host da scannerizzare.</li>\n<li><strong>Local Subnet</strong>, se un host puo' essere infettato dietro ad un firewall quell'host poi guarda ad altri target nella sua rete locale per trovare altri host protetti dal firewall.</li>\n</ul>\n<h3>Worms propagation model:</h3>\n<p>La propagazione di un worm segue una curva che parte piano per poi incrementarsi esponenzialmente fino a quando ha infettato tutti i bersagli. Naturalmente e' importante trovarlo nella fase iniziale della cresccita e fermarlo.</p>\n<h3>Morris Worm:</h3>\n<p>La prima infezione di worm in Internet. Creato per UNIX e usa tecniche differenti di propagazione. Quando una copia inizia l'esecuzione fa, come prima cosa, l'analisi di altri hosts consociuti che permettono la comunicazione con l'host infettato (esamina liste e tabelle dell'host, mail, ...). Per ogni host scoperto prova varie tecniche di accesso:</p>\n<ul>\n<li>[x] Login remoto come utente legittimo grazie ai file che danno user e password nella macchina infettata grazie ad un software di password-cracking che utilizza <em>permutazioni semplici</em>, <em>Morris built-in password list di 432 elementi</em> e <em>tutte le parole nel dizionario del sistema locale</em></li>\n<li>[x] Exploit di bug UNIX finger protocol, che riporta info sugli utenti remoti</li>\n<li>[x] Exploit di trapdorr in opzione di debug di un processo remoto che riceve e manda mail</li>\n</ul>\n<p>Se uno di questi ha successo il worm ha la comunicazione con l'interprete di comandi del SO, manda un piccolo programma di bootstrap seguito da un comando che lo esegue e poi si slogga dal sistema. Il programma richiama il programma padre e scarica il worm.</p>"
                },
                {
                    "subtitle": "6.5 Propagazione - Social Engineering - Spam E-Mail - Trojans",
                    "content": "<p>La categoria finale di propagazione dei malware che consideriamo coinvolge l'ingegneria sociale, ovvero ingannare l'utenza per ottenere da loro accessi, informazioni o comportamenti specifici. Questo puo' avvenire quando vede e risponde a SPAM o permette l'installazione ed esecuzione di qualche Trojan o script.</p>\n<h3>Trojan Horses:</h3>\n<blockquote>\n<p>Trojan: programma o utility utile, o apparentemente utile, che contiene codice nascosto che quando invocato esegue funzioni non volute o pericolose</p>\n</blockquote>\n<p>Possono essere utilizzati per eseguire funzioni che l'attaccante non puo' eseguire direttamente (eg: ottenere accesso a dati o file ed inviarseli). Possono essere nascosti anche in giochi o programmi di utility e rendendoli disponibili tramite siti o app store conosciuti!</p>\n<p>Questo approccio e' stato usato ad esempio costruendo anti-virus o update di sicurezza che in realta' erano Trojan, che piombano sul sistema con payload pieni di <em>spyware</em>. Un trojan sta in uno dei seguenti tre modelli:</p>\n<ul>\n<li><em>Continua ad eseguire funzioni di software originali mentre fa i cazzi suoi altrove</em></li>\n<li><em>Continua ad eseguire funzioni originali mentre modifica le funzioni per nascondere</em> (eg: trojan che mostra i processi in esecuzione, in realta' filtra alcuni di essi) <em>o aggiungere cose</em></li>\n<li><em>Esegue la sua funzione malevola rimpiazzando del tutto le funzioni del software originale</em></li>\n</ul>\n<p>Alcuni Trojan riescono ad autoeseguirsi (come i worms), ma senza replicarsi.</p>"
                },
                {
                    "subtitle": "6.6 PayLoad - System Corruption:",
                    "content": "<p>Una che un malware e' attivato sulla macchina target, il prossimo passo e' eseguire le azioni per cui e' stato costruito.</p>\n<ul>\n<li>Non necessariamente i malware hanno un payload, potrebbero avere il solo scopo di replicarsi.</li>\n<li>Altri possono avere PayLoad che si attivano in certe condizioni per causare la distruzione del sistema.</li>\n<li>Altri tentano di provocare danni al mondo reale sfruttando i computer (attaccando SW, HW o Utenti).</li>\n</ul>\n<h3>RansomWare:</h3>\n<blockquote>\n<p>RansomWare: Al posto di distruggere i dati utente li criptano e chiedono pagamento per accedervi di nuovo, eg: <em>PC Cyborg Trojan del 1989</em></p>\n</blockquote>\n<h3>Real-World Damage:</h3>\n<blockquote>\n<p>Chernobyl Virus: lui modificava il codice BIOS del sistema rendendo inutilizzabile alle volte il chip, che doveva essere riprogrammato o rimpiazzato.</p>\n</blockquote>"
                },
                {
                    "subtitle": "6.7 PayLoad - Attack Agent - Zombie, detti Bot",
                    "content": "<p>Altri PayLoad possono permettere all'attaccante il pieno utilizzo del sistema. Il sistema quindi passa alle dipendenze di qualcun'altro, senza che l'utente se ne accorga alle volte, e quando chiamato a fare qualcosa la fa. Pertanto molti sistemi IoT o sistemi di terze parti insospettabili vengono usati come base di lancio per attacchi (es a lezion: DDoS lanciato contro Amazon).</p>\n<blockquote>\n<p>BotNet: Collezione di bot capaci di agire in amniera coordinata, affittabili ed insospettabili.</p>\n</blockquote>\n<p>Come gia' detto i Bot vengono usati per <strong>DoS</strong>, ma anche per <strong>Spamming, Sniffing, KeyLogging, Spreading new Malware, Install AD add-ons, ...</strong></p>"
                },
                {
                    "subtitle": "6.8 PayLoad - Information Theft - KeyLoggers, Phishing and SpyWare:",
                    "content": "<p>Spesso i payload vengono usati anche per le funzioni elencate qui sopra, il che li rende innocui da un certo punto di vista, ma disturbante sul profilo della privacy. Inoltre i dati presi possono essere venduti sul mercato nero a malintenzionati nella vita reale.</p>"
                },
                {
                    "subtitle": "6.9 PayLoad - Stalthing - BackDoors, RootKits:",
                    "content": "<p>Tecniche utilizzate dai malware per nascondere la propria presenza e coprire gli accessi in quel sistema. Attaccano l'<em>integrita'</em> del sistema.</p>\n<blockquote>\n<p><strong>BackDoor/TrapDoor</strong>: punto di entrata segreto in un sw che permette qualcuno, che sa di averla a disposizione, di accedere al sistema balzando gli usuali controlli di accesso. I programmatori la utilizzarono legittimamente per anni sia per debuggare che per testare programmi, ma solitamente solo in fasi di sviluppo. Si riconosce per una speciale sequenza di input o di eventi.</p>\n<p>Negli ultimi tempi sono stati usati in implementazioni di servizi di reti che ascoltano porte non standard, alla quale un attaccante puo' connettersi.</p>\n</blockquote>\n<blockquote>\n<p><strong>RootKit</strong>: insieme di programmi installati su un sistema per mantenere anonimi gli accessi al sistema con privilegi di root. Negandone l'esistenza a quanti piu' utenti possibili. Un rootkit puo' essere categorizzato:</p>\n<ul>\n<li><em>Persistente</em>, attivato ad ogni boot</li>\n<li><em>Memory Based</em>, non sopravvive al reboot</li>\n<li><em>User Mode</em>, intercetta call di API e modifica i risultati di ritorno (per nascondere qualcosa)</li>\n<li><em>Kernel Mode</em>, intercetta call di API native in kernel mode (eg: rimuove un processo dalla lista di quelli attivi del kernel)</li>\n<li><em>VM based</em>, installano una VM leggera cosi' da poter intercettare e modificare stati ed eventi nel sistema virtuale</li>\n<li><em>External Mode</em>, malware sta fuori dalle normali operazioni, nel BIOS o nel System Management Mode, dove puo' accedere direttamente all'HardWare</li>\n</ul>\n</blockquote>"
                },
                {
                    "subtitle": "6.10 Contromisure:",
                    "content": "<p>La soluzione ideale per trattare con i malware e' la prevenzione. Ma e' impossibile da realizzare...</p>\n<p>NIST SP 800-83 suggerisce 4 elementi principali di prevenzione:</p>\n<ol>\n<li><strong>Policy</strong></li>\n<li><strong>Awareness/Consapevolezza</strong></li>\n<li><strong>Vulnerability Mitigation</strong></li>\n<li><strong>Threat Mitigation/Mitigazione Minacce</strong></li>\n</ol>\n<p>Se la prevenzione fallisce ci sono meccanismi tecnici che possono essere usati per supportare le seguenti tecniche di mitigazione delle minacce:</p>\n<ul>\n<li><strong>Detection</strong>, dopo l'infezione la vede e capisce dove e' locato il malware</li>\n<li><strong>Identification</strong>, dopo detection identifica il malware specifico</li>\n<li><strong>Removal</strong>, dopo averlo identificato rimuovine tutte le tracce dal sistema</li>\n</ul>\n<p>Se funziona solo detection allora bisogna togliere tutti i file infetti o malevoli e ricaricare un backup pulito. Alle volte richiede una pulizia completa della memoria.</p>\n<p>Per avere contromisure efficaci dobbiamo considerare tutti, o parte, di questi requisiti:</p>\n<ul>\n<li><strong>Generalita'</strong> per poter gestire una vasta gamma di attacchi</li>\n<li><strong>Prontezza</strong> per rispondere velocemente ed evitare propagazioni</li>\n<li><strong>Resilienza</strong> per resistere a tecniche di evasione e di oscuramento</li>\n<li><strong>Costo minimo in termini di DoS</strong> per assicurare un corretto funzionamento del sistema durante l'attuazione delle contromisure</li>\n<li><strong>Trasparenza</strong> per non modificare in alcun modo SO, software e hardware pre-esistente</li>\n<li><strong>Copertura globale e locale</strong> cosi' da reagire ad attacchi interni ed esterni alla rete</li>\n</ul>\n<p>Riuscire ad averli tutti nella nostra faretra (per scoprire se lo hai letto davvero) ci porta ad avere una strategia di difesa profonda e multiapproccio.</p>\n<h3>Antivirus:</h3>\n<p>Gli antivirus sono software molto diffusi sugli end system globali, questo porta ad avere massimo accesso sia a cosa il malware fa, ma anche alla vista dell'attivita' del malware su uno specifico sistema.</p>\n<p>Un software antivirus e' una forma di <strong>host-based scanner</strong> che cerca le intrusioni nel sistema. Come i malware essi si sono evoluti e ci sono 4 generazioni di attributi [STEP93]:</p>\n<ol>\n<li>Prima gen --&gt; semplici scanner [Signature based, limitati a malware conosciuti e semplici]</li>\n<li>Seconda gen --&gt; scanner euristici [Heuristic rule based, limitati a trovare frammenti di codice come quelli di codifica e la sua chiave, una volta trovata decodifica e scopre il malware] [Checksum rows based]</li>\n<li>Terza gen --&gt; trappole di attivita' -- activity traps [Programmi residenti in memoria che identificano le azioni piu' che la struttura]</li>\n<li>Quarta gen --&gt; protezione a tutto tondo [Pacchetti che hanno una varieta' molto grande di tecniche usate insieme, includendo seconda e terza gen, ma anche, ad esempio, possibilita' di controllare gli accessi]</li>\n</ol>\n<h3>Sandbox Analysis:</h3>\n<p>Botta:</p>\n<p>Creare un ambiente emulato per vedere cosa fa un certo software, studiandone i comportamenti si capisce se e' malevolo o meno. Cio' comporta il ritrovamento di malware criptati, polimorfici o metamorfici (piu' difficile :D).</p>\n<p>Risposta:</p>\n<p>Alcuni malware controllano dove vengono eseguiti e cambiano il loro comportamento, altri includono delle sleep in modo tale da evadere dalle analisi, oppure potrebbero nascondere bombe logiche. In risposta</p>\n<p>RiBotta:</p>\n<p>Per tale motivi i difensori adattano gli ambienti sandbox per evadere da questi test.</p>\n<h3>Host-Based Dynamic Malware Analysis:</h3>\n<p>A differenza degli scanner essi monitorano il comportamento di possibile codice malevolo, cercando potenziali azioni malevoli ed inoltre possono bloccare queste azioni prima che avvengano. Ci sono mille modi di evadere e nascondersi da uno scanner, specialmente euristico, ma ben pochi per nascondere i comportamenti malevoli.</p>\n<p>Sono pero' limitati poiche' il codice malevolo deve essere eseguito sulla macchina prima e tutti i suoi comportamenti devono esse\tre individuati per poter essere blocati. Cio' impllica tempi lunghi e alle volte (parere mio personale) limitazioni per l'utente. E soprattutto azioni innocue al punto giusto causano problemi enormi, non si puo' bloccare tutto.</p>\n<h3>Spyware Detection and Removal:</h3>\n<p>Esistono software specifici, ma sono complementari ad antivirus piu' generali.</p>\n<h3>Rootkit Detection:</h3>\n<p>Complicatina, un modo e' quello di confrontare il sistema prima usando APIs e poi senza, dato che e' li che modificano lo stato del sistema.</p>\n<h3>Tecnica dello scanning perimetrale:  [in brevissimo]</h3>\n<p>Ovvero utilizzare un antivirus in ingresso e in uscita dalla rete (vedi analisi predownload, antivirus in proxy e e-mail, ecc..). Possono anche vedere le attivita' BotNet monitorando il traffico anormale associato a questa attivita'.</p>\n<h3>Usarli nelle configurazioni distribuite:</h3>\n<p>Sistema di analisi centrale capace di correlare e analizzare i dati. Utilizza sia host-based che scanning perimetrali.</p>"
                }
            ]
        },
        {
            "title": "Network security",
            "sections": [
                {
                    "subtitle": "Tracerout",
                    "content": "<p>ci dice quanti hop ci sono tra host</p>\n<p>lo capisco tramite il TTL, aumento il TTL di uno in uno il pacchetto scade mi torna una richiesta, da chi mi ritorna ? dal router, così capisco la distanza in numero di hop</p>\n<pre><code>tracerout unimi.it\n</code></pre>\n<pre><code>traceroute to unimi.it (159.149.53.140), 30 hops max, 60 byte packets\n 1  10.0.2.2 (10.0.2.2)  0.317 ms  0.173 ms  0.241 ms\n 2  172.28.255.254 (172.28.255.254)  2.916 ms  5.264 ms  4.947 ms\n 3  * * *\n 4  * * *\n 5  * * *\n\n</code></pre>\n<p>*** il router non risponde</p>"
                },
                {
                    "subtitle": "Port scanning",
                    "content": "<p>uso diverse tecniche per determinare lo stato delle porte di un targhet remoto. Ogni servizio sia TCP che UDP per funzionare deve avere una porta aperta. Alcuni sistemi hanno porte predefinite.</p>\n<p>Bisogna sapere la versione del servizione per vedere quali sono le vulnerabilità</p>\n<h3>Nmap</h3>\n<pre><code>nmap -sT connect()\n</code></pre>\n<p>Fa partire una connessione TCP con la syscall connect()</p>\n<p>Syn,  syn / ack , ack</p>\n<p><strong>problema</strong> se apro connessione rimane la tracia</p>\n<p><strong>Soluzione: scansione stealth</strong></p>\n<pre><code>nmap -sS SYN scan (stealth)\n</code></pre>\n<ul>\n<li>connessione TCP standard senza ACK finale ma gli mando un RST, così so che la porta è aperta,</li>\n<li>se il RST lo ricevo dal server so che quella porta è chiusa.</li>\n<li>posso anche non ricevere risposta, il server ha un meccanismo di filtro .</li>\n</ul>\n<p><strong>scoprire quale SO usa</strong></p>\n<pre><code>nmap -O OS detection \n</code></pre>\n<p>come fa a scoprirlo ? ci sono alcuni SO che non implementano lo standard di alcuni pacchetti, analizzando la risposta posso scoprire quale SO è</p>\n<p><strong>idle scan (zombie)</strong></p>\n<pre><code>nmap -sI Idle scan (zombie)\n</code></pre>\n<p>deve esserci una macchina sulla rete che non fa tanto traffico</p>\n<p>faccio probing su questa macchina, gli mando dei pacchetti e ricevo delle risposte, estrapolo sequence number.</p>\n<p>faccio richiesta al targhet mettendo IP dello zombie, il targhet risponde allo zombie,</p>\n<p>rifaccio probing allo zombie per vedere se sequence number è cambiato</p>\n<ul>\n<li>cambiato: porta targhet attiva</li>\n<li>non cambiato: porta non attiva</li>\n</ul>"
                },
                {
                    "subtitle": "Arp Poising",
                    "content": "<p>per farlo usiamo ettercap e Wireshark</p>\n<ul>\n<li>intercetta traffico</li>\n<li>cattura traffico</li>\n<li>...</li>\n</ul>\n<p><img src=\"/Users/davidevigano/Documents/Sicurezza/SicurezzaFoto/arpPoising.png\" alt=\"\"></p>"
                }
            ]
        }
    ]
}